# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       8000 default_server;
        listen       [::]:8000 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
			uwsgi_pass       127.0.0.1:8001;
			include              uwsgi_params;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;

		rewrite ^(.*)$ https://$host$1;
		location / {
			index index.html index.htm;
		}
    }

# Settings for a TLS enabled server.

	server {
		listen 443  ssl;
		server_name  api.nimotion.cn;
		
		ssl_certificate ./ssl_crt/api.nimotion.cn.pem;
		ssl_certificate_key ./ssl_crt/api.nimotion.cn.key;
	 
		ssl_session_cache shared:SSL:10m; #在建立完ssl握手后如果断开连接，在session_timeout时间内再次连接，是不需要再次获取公钥建立握手的，可以服用之前的连接
		ssl_session_timeout 1440m;  #ssl连接断开后的超时时间
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #配置加密协议
		ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;  #使用TLS版本协议
		ssl_prefer_server_ciphers on;  #nginx决定使用哪些协议与浏览器通信
		location / {
        	index index.html index.htm;
			#服务器程序地址
			proxy_pass http://127.0.0.1:8000;
		}

	}
		server {
		listen 443 default_server ssl;
		server_name  www.nimotion.cn;
		root /data/www/dist;
		index index.html index.htm;
		ssl_certificate ./ssl_crt/nimotion.cn_cert_chain.pem;
		ssl_certificate_key ./ssl_crt/nimotion.cn_key.key;
	 
		ssl_session_cache shared:SSL:10m; #在建立完ssl握手后如果断开连接，在session_timeout时间内再次连接，是不需要再次获取公钥建立握手的，可以服用之前的连接
		ssl_session_timeout 1440m;  #ssl连接断开后的超时时间
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;  #配置加密协议
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  #使用TLS版本协议
		ssl_prefer_server_ciphers on;  #nginx决定使用哪些协议与浏览器通信
        location / {
          try_files $uri $uri/ /index.html;
        }
		#配置静态资源地址
		location /assets {
        	alias /data/www/dist/assets/;
		}
		location /static {
        	alias       /data/www/static;
		}
	}

}

